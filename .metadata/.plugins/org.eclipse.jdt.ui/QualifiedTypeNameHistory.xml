<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="javax.persistence.GenerationType"/>
    <fullyQualifiedTypeName name="com.bridgelabz.fundoonotemicroservice.dto.LableDTO"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="com.bridgelabz.fundoonotemicroservice.service.ILableSerivce"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PutMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.DeleteMapping"/>
    <fullyQualifiedTypeName name="javax.persistence.CascadeType"/>
    <fullyQualifiedTypeName name="javax.persistence.ManyToMany"/>
    <fullyQualifiedTypeName name="com.bridgelabz.fundoonotemicroservice.repository.LableRepository"/>
    <fullyQualifiedTypeName name="lombok.extern.java.Log"/>
    <fullyQualifiedTypeName name="javax.persistence.Lob"/>
    <fullyQualifiedTypeName name="com.bridgelabz.fundooadminmicroservice.model.FundooUserModel"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="com.bridgelabz.fundoonotemicroservice.utill.ResponseClass"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="com.bridgelabz.fundoonotemicroservice.model.LableModel"/>
    <fullyQualifiedTypeName name="javax.persistence.JoinTable"/>
    <fullyQualifiedTypeName name="javax.persistence.JoinColumn"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.Query"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonIgnore"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.scheduling.annotation.EnableScheduling"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.condition.ConditionalOnProperty"/>
    <fullyQualifiedTypeName name="java.time.LocalDateTime"/>
    <fullyQualifiedTypeName name="org.springframework.format.annotation.DateTimeFormat"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="com.bridgelabz.fundoonotemicroservice.repository.INoteRepository"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="java.text.Format"/>
    <fullyQualifiedTypeName name="java.text.SimpleDateFormat"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.bridgelabz.fundoonotemicroservice.service.MailService"/>
    <fullyQualifiedTypeName name="com.bridgelabz.fundoonotemicroservice.model.NoteModel"/>
    <fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
    <fullyQualifiedTypeName name="java.lang.System"/>
    <fullyQualifiedTypeName name="java.lang.Thread"/>
    <fullyQualifiedTypeName name="org.springframework.scheduling.annotation.EnableAsync"/>
    <fullyQualifiedTypeName name="org.springframework.scheduling.annotation.Async"/>
    <fullyQualifiedTypeName name="org.springframework.scheduling.annotation.Scheduled"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="java.lang.reflect.InvocationTargetException"/>
    <fullyQualifiedTypeName name="org.springframework.data.util.ReflectionUtils"/>
    <fullyQualifiedTypeName name="java.lang.reflect.UndeclaredThrowableException"/>
    <fullyQualifiedTypeName name="org.springframework.util.ReflectionUtils"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="org.hibernate.LazyInitializationException"/>
    <fullyQualifiedTypeName name="javax.persistence.FetchType"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="com.bridgelabz.fundooadminmicroservice.util.UserResponse"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="java.lang.Object"/>
    <fullyQualifiedTypeName name="com.bridgelabz.fundoonotemicroservice.utill.UserResponse"/>
</qualifiedTypeNameHistroy>
